@using ElectronNET.API
@using MARM.Services
@using MARM.Enums
@using MARM.Data
@inherits LayoutComponentBase

@inject NavigationManager  naviManger
@inject IPageNavigationService pageNavi
@inject IComDataService comService
@inject IDataSendService dataSender
@inject IDataSettingService dataSetting
@inject ApplicationDbContext dbContext
@inject ISnackbar Snackbar

<PageTitle>MARM</PageTitle>

<div class="w-100 h-100 d-flex flex-column">
    <header class="d-flex flex-column align-items-center">
        <img class="w-100 h-100" src="images/Picture1.png" />
        <h2 class="my-1 w-auto fw-bold">MÁY TÍNH TRUNG TÂM GIÁM SÁT KẾT QUẢ BẮN PHÁO TRÊN BIỂN</h2>

    </header>
    <main>
        <div>
            @Body
        </div>
    </main>
    <footer class="w-100 d-flex justify-content-between align-items-center" style="background-color: #FFD966;">
        <div>
            <MudIconButton @onclick="NavigateBack" Icon="@Icons.Material.Filled.ArrowBack" Color="Color.Primary" />
        </div>
        <div class="d-flex flex-row align-items-center">
            <div class="nav-item">
                <NavLink @onclick="DashboardClick" class="nav-link" href="/dashboard">
                    <span class="mdi mdi-view-dashboard mdi-24px" aria-hidden="true"></span> Dashboard
                </NavLink>
            </div>
            <div class="nav-item">
                <NavLink @onclick="SettingClick" class="nav-link" href="/setting">
                    <span class="mdi mdi-cog mdi-24px" aria-hidden="true"></span> Setting
                </NavLink>
            </div>
            <div class="nav-item">
                <NavLink @onclick="CheckClick" class="nav-link" href="/checklist">
                    <span class="mdi mdi-playlist-check mdi-24px" aria-hidden="true"></span> Kiểm tra hệ thống
                </NavLink>
            </div>
            <div class="nav-item">
                <NavLink @onclick="DataClick" class="nav-link" href="/navalunits">
                    <span class="mdi mdi-ship-wheel mdi-24px" aria-hidden="true"></span> Quản lý đơn vị
                </NavLink>
            </div>
            <!-- Thêm nút close -->
            <div class="nav-item">
                <MudIconButton @onclick="CloseApp" Icon="@Icons.Material.Filled.Close" Color="Color.Error" />
            </div>
        </div>

        <div>
            <MudIconButton @onclick="NavigateForward" Icon="@Icons.Material.Filled.ArrowForward" Color="Color.Primary" />
        </div>
    </footer>
</div>

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

@code {
    private List<string> navLinks = new List<string> { "dashboard", "setting", "checklist", "navalunits" };
    private List<int> outputPin = new List<int> { 4, 3, 2, 1 };
    private int currentLinkIndex = 0;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        pageNavi.PageChanged += HandlePageChanged;
        pageNavi.TotalPage = 4;
        if (comService.IsConnected())
        {
            pageNavi.NavigateTo(0);
            Snackbar.Add("Kết nối thành công!", Severity.Success);
        }
        else
        {
            pageNavi.NavigateTo(1);
            Snackbar.Add("Không thể kết nối đến cổng COM!", Severity.Error);
        }
        
    }


    private void HandlePageChanged(int pageIndex)
    {
        _ = InvokeAsync(() =>
        {
            NavigateToLink(navLinks[pageIndex]);
            // if(pageIndex == 0) dataSender.RemoteUpdateStatus();
            StateHasChanged();
        });
    }

    private void NavigateBack()
    {
        pageNavi.NavigateBack();
    }

    private void NavigateForward()
    {
        pageNavi.NavigateForward();
    }

    private void NavigateToLink(string link)
    {
        currentLinkIndex = navLinks.IndexOf(link);
        naviManger.NavigateTo(link);
    }


    // Phương thức đóng ứng dụng
    private void CloseApp()
    {
        Electron.WindowManager.BrowserWindows.First().Close();
    }

    public void Dispose()
    {
        pageNavi.PageChanged -= HandlePageChanged;
    }
    private void DataClick()
    {
        pageNavi.NavigateTo(3);
    }
    private void DashboardClick()
    {
        pageNavi.NavigateTo(0);

    }
    private void SettingClick()
    {
        pageNavi.NavigateTo(1);

    }
    private void CheckClick()
    {
        pageNavi.NavigateTo(2);

    }
}

